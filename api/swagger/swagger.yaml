swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /books:
    x-swagger-router-controller: book-controller
    get:
      operationId: getAll
      description: Return a books list
      parameters:
        - $ref: "#/parameters/skipParam"
        - $ref: "#/parameters/limitParam"
      responses:
        "200":
          description: Success 
          schema:
            $ref: '#/definitions/Books'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: create
      description: Add a new book
      parameters:
      - name: book
        description: Book properties
        in: body
        required: true
        schema:
          $ref: "#/definitions/Book"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
         # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /books/{id}:
    x-swagger-router-controller: book-controller
    get:
      operationId: find
      description: Return Book by id
      parameters:
      - name: id
        type: string
        in: path
        required: true
      responses:
        "200":
          description: Success 
          schema:
            $ref: '#/definitions/Book'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    put:
      operationId: update
      description: Update a book
      parameters:
      - name: id
        description: Book id
        type: string
        in: path
        required: true
      - name: book
        description: Book properties
        in: body
        required: true
        schema:
          $ref: "#/definitions/Book"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
         # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: remove
      description: Delite a book by ID
      parameters:
      - name: id
        description: Book id
        type: string
        in: path
        required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
         # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Books:
    properties:
      paging:
        type: object
        properties:
          skip:
            type: integer
          limit: 
            type: integer
          count: 
            type: integer
      data:
        type: array
        items:
          $ref: '#/definitions/Book'
    required:
        - paging
        - data
  Book:
    properties:
      id:
        type: string
      title:
        type: string
      author:
        type: string
      year:
        type: integer
    required:
      - title
      - author
      - year  
  GeneralResponse:
    properties:
      message:
        type: string
    required:
      - message
  ErrorResponse:
    properties:
      message:
        type: string
    required:
      - message
      
parameters:
  skipParam:
    name: skip
    in: query
    description: number of items to skip
    required: false
    type: integer
    format: int32
    minimum: 0
  limitParam:
    name: limit
    in: query
    description: max records to return
    required: false
    type: integer
    format: int32
    maximum: 100
    minimum: 0
